package main.java;

import java.util.Optional;
import org.json.JSONException;
import org.json.JSONObject;
import org.json.XML;

public class CitiXMLParser {

    private static final int PRINT_INDENT_FACTOR = 4;

    /**
     * convert a citi request or response xml string to its json equivalent
     * @param XML_STRING the original xml string to be parsed
     * @return an optional of the converted json string
     */
    public static Optional<String> parseXMLtoJson (String XML_STRING) {
      Optional<String> jsonString = Optional.empty();
      try {
        JSONObject xmlJSONObj = XML.toJSONObject(XML_STRING);
        jsonString = Optional.of(xmlJSONObj.toString(PRINT_INDENT_FACTOR));
      } catch (JSONException e) {
        e.printStackTrace();
      }
      return jsonString;
    }

    /**
     * convert a citi request or response json string to its xml equivalent
     * @param JSON_STRING the original json string to be parsed
     * @return an optional of the converted xml string
     */
    public static String parseJsontoXML (String JSON_STRING) {
      JSONObject json = new JSONObject(JSON_STRING);
      return XML.toString(json);
    }

    public static void main(String[] args) {
      // XML to Json Test
      final String TEST_XML_STRING =
          "<token><token_type>Bearer</token_type><access_token>TBeIO99q3hNQHuZqBcktppOQpIQdwbsKs538lYKHn9Y7DPtIWhDDcP8bbWAC9y/Ce4CytyMdEYTEtg1xDA4gVwsH7iE6f3kW87Yfy4Ai1C0vv7h50EHfrnRm6tJiT2Z9k4772ojxk01duh58HuXbPC/b7TnwXr4cKsPLPXKAoWsyr1p2RyikV8EgqFaFduwXYnZVmoFk15uIl6nTvddUVou9P17S2PCUcvavY0w7zItQ6Nk3Z7RQiX1aFAF/4mX0+36hOKZ6040kpcYaClfbvR4no0LEZ+y3KSy1B8FL+xwMUXQxiNBW07ZR1ETRvqYwXfwP6xAMFEH67SdAFKkpFQoWSsUw2C46KYl9JWydgwzrwuRK+sn0r0AYl3fop2A2DF+twCcmzSvObg/CwGMTBBDgyIruVc8YkiIO4iJ1cRUaUYJtbNfnYsUyZQiq2Wpu</access_token><expires_in>3600</expires_in><scope>/authenticationservices/v1</scope></token>";
          //"<?xml version=\"1.0\" encoding=\"UTF-8\"?><xenc:EncryptedData Type=\"http://www.w3.org/2001/04/xmlenc#Element\" xmlns:xenc=\"http://www.w3.org/2001/04/xmlenc#\"><xenc:EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#tripledes-cbc\"/><dsig:KeyInfo xmlns:dsig=\"http://www.w3.org/2000/09/xmldsig#\"><xenc:EncryptedKey Recipient=\"name:2651a0c7-24bf-4478-932f-8d1de7fdb472\"><xenc:EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#rsa-1_5\"/><dsig:KeyInfo><dsig:KeyName>2651a0c7-24bf-4478-932f-8d1de7fdb472</dsig:KeyName></dsig:KeyInfo><xenc:CipherData><xenc:CipherValue>hrI5P8ThuSZZ2F6UdZTC+YuNLAvgXEzaSIF7pGCxKHKWBkBKVvRzCb+2nzpAoLMrQDPNoCcFFm+AOaoOpajNYf/RB0jDKPbCIiwxOawKoXT3xzRUmr8DoO+Ju2nnm3zpO/rNb0yRT9/uS5zdQeMFEPX0Y4X1HIK2LM/fL/BX3YRkS0D4LiN8zCpYCXf0P4REZFmhRJZBrTo3Dnts1Th5fRNEyJYGmlLLFR9mstoPdW3HZTdSxa/t5X8TtPaNNHWbksFPPG/eF4x/Z4Xjtky0SCmTq6DKP3gvxjHrthf7xPZ+VtoXGFkMlgsCDOMA/eP6ElLgwjDZj9cqP9NkE/RtDA==</xenc:CipherValue></xenc:CipherData></xenc:EncryptedKey></dsig:KeyInfo><xenc:CipherData><xenc:CipherValue>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</xenc:CipherValue></xenc:CipherData></xenc:EncryptedData>";
      Optional<String> result = parseXMLtoJson(TEST_XML_STRING);
      result.ifPresent(System.out::println);

      // Json to XML Test
      final String TEST_JSON_STRING =
          "{\"@xmlns\":\"urn:iso:std:iso:20022:tech:xsd:pain.001.001.03\",\"customer_credit_transfer_initiation\":{\"group_header\":{\"message_identification\":\"10006058058\",\"creation_date_time\":\"2016-04-25T16:13:12\",\"number_of_transactions\":\"1\",\"initiating_party\":{\"name\":\"Ordering Party12\",\"identification\":{\"organisation_identification\":{\"other\":[{\"identification\":\"578578\"}]}}}},\"payment_information\":[{\"payment_information_identification\":\"200165570\",\"payment_method\":\"TRF\",\"number_of_transactions\":\"1\",\"requested_execution_date\":\"2019-03-06\",\"debtor\":{\"name\":\"Ordering Party12\",\"postal_address\":{\"country\":\"HK\",\"address_line\":[\"City View\",\"165 Km\"]},\"identification\":{\"organisation_identification\":{\"other\":[{\"identification\":\"015271\"}]}}},\"debtor_account\":{\"identification\":{\"other\":{\"identification\":\"1192834003\",\"scheme_name\":{\"proprietary\":\"Other\"}}},\"currency\":\"HKD\"},\"debtor_agent\":{\"financial_institution_identification\":{\"bic\":\"CITIHKHX\",\"clearing_system_member_identification\":{\"member_identification\":\"12334\"},\"postal_address\":{\"country\":\"HK\"}}},\"charge_bearer\":\"CRED\",\"credit_transfer_transaction_information\":[{\"payment_identification\":{\"end_to_end_identification\":\"SK06072018KO\"},\"payment_type_information\":{\"service_level\":{\"code\":\"NURG\"},\"local_instrument\":{\"code\":\"SALA\"}},\"amount\":{\"instructed_amount\":{\"currency\":\"HKD\",\"$\":\"2.00\"}},\"ultimate_debtor\":{\"postal_address\":{\"address_line\":[\"address\"]}},\"creditor_agent\":{\"financial_institution_identification\":{\"clearing_system_member_identification\":{\"member_identification\":\"231000\"},\"name\":\"Employee\",\"postal_address\":{\"country\":\"CP\"}}},\"creditor\":{\"name\":\"MOBILEMOBILEMOBILE\"},\"creditor_account\":{\"identification\":{\"other\":{\"identification\":\"111111111\"}}},\"purpose\":{\"proprietary\":\"23\"},\"related_remittance_information\":[{\"remittance_location_method\":\"FAXI\",\"remittance_location_electronic_address\":\"12358548752\"}],\"remittance_information\":{\"unstructured\":[\"\\/IDTP\\/AIIN\",\"\\/ASTT\\/21\"],\"structured\":[{\"referred_document_information\":[{\"number\":\"123456852\"}],\"referred_document_amount\":{\"remitted_amount\":{\"currency\":\"HKD\",\"$\":\"12345678\"}}}]}}]}]}}";
      System.out.println(parseJsontoXML(TEST_JSON_STRING));
    }
}
